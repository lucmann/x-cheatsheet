name: Release

on:
  push:
    tags:
      - 'v*.*.*'  # This triggers the workflow for tags like v1.0.0, v2.1.0, etc.

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Cache TeX Live packages
      id: cache-texlive
      uses: actions/cache@v2
      with:
        path: /usr/local/texlive
        key: texlive-${{ runner.os }}-${{ hashFiles('**/texlive-*') }}
        restore-keys: |
          texlive-${{ runner.os }}-

    - name: Install TeX Live dependencies
      if: steps.cache-texlive.outputs.cache-hit != 'true'
      run: |
        sudo apt-get update
        sudo apt-get install -y 'texlive-*'

    - name: Install gh # GitHub CLI used to upload release assets
      run: |
        sudo apt-get update
        sudo apt-get install -y gh

    - name: Build project
      run: |
        make
        ls -l

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Release notes for ${{ github.ref }}
        draft: false
        prerelease: false

    # Upload PDF and PNG files as release assets in a loop
    # Due to the lack of support for wildcards in the `actions/upload-release-asset` action
    - name: Upload PDF Release Asset
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        for file in ./*.pdf; do
          echo "Uploading $file..."
          gh release upload ${{ github.event.release.tag_name }} "$file" --clobber
        done

    - name: Upload PNG Release Asset
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        for file in ./*cheatsheet*.png; do
          echo "Uploading $file..."
          gh release upload ${{ github.event.release.tag_name }} "$file" --clobber
        done
